# LINQ
- LINQ는 다양한 데이터 소스 및 형식에 사용할 수 있는 일관된 모델을 제공함으로써 이러한 상황을 단순화 합니다.

```
All : 데이터 소스의 모든 항목이 지정한 조건과 일치하면, true를 반환한다.
Any : 데이터 소스의 항목 중 하나라도 지정한 조건과 일치하면, true를 반환한다.
Contains : 데이터 소스에 지정한 항목이나 값이 존재하면, true를 반환한다.
Count : 데이터 소스에 존재하는 항목의 개수를 반환한다.
First : 데이터 소스의 첫 번째 항목을 반환한다.
FirstOrDefault : 데이터 소스의 첫 번째 항목을 반환한다. 만약 항목이 하나도 존재하지 않으면, 기본값을 반환한다.
Last : 데이터 소스의 마지막 항목을 반환한다.
LastOrDefault : 데이터 소스의 마지막 항목을 반환한다. 만약 항목이 하나도 존재하지 않으면, 기본값을 반환한다.
Max Min : 람다 식에 의해 지정된 최댓값 또는 최솟값을 반환한다.
OrderBy
OrderByDescending : 람다 식에 의해 반환된 값을 기준으로 데이터  소스를 정렬한다.
Reverse : 데이터 소스에 존재하는 항목들의 순서를 뒤집는다.
Select : 질의의 결과를 투영한다.
SelectMany : 각각의 데이터 항목을 항목들의 시퀀스로 투영한 다음, 그결과 시퀀스들을 연결해서 단일 시퀀스로 평면화 시킨다.
Single : 데이터 소스에서 첫 번째 항목을 반환한다. 만약 항목이 하나 이상 존재하면, 예외를 던진다.
SingleOrDefault : 데이터 소스에서 첫 번째 항목을 반환한다. 만약 항목이 하나도존재하지 않으면, 기본값을 반환하고, 하나 이상 존재하면 예외를 던진다.
Skip SkipWhile : 지정한 개수만큼 항목을 건너뛰거나 지정한 조건이 일치하는 항목을 건너뛴다.
Sum : 지정한 조건에 의해 선택된 값들의 합계를 계산한다.
Take
TakeWhile : 데이터 소스의 시작에서부터 지정한 개수의 항목을 선택하거나 지정한 조건이 일치하는 항목들을 선택한다.
ToArray
ToDictionary ToList : 데이터 소스를 배열이나 다른 컬렉션 형식으로 변환한다.
Where : 데이터 소스에서 지정한 조건과 일치하지 않는 항목들을 필터링한다.
```
